<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mreservation.dao.MReservationMapper">
	<select id="movieList" resultType="Movie">
		select * from movie order by movie_title
	</select>
	
	<select id="screeningList" resultType="Screening">
		select sc.screening_start, sc.screening_end, mo.movie_title, sc.auditorium_id
		from screening sc, movie mo
		where sc.movie_id=mo.movie_id
		and screening_start > sysdate+30/1440
		order by movie_title, screening_start
	</select>
	
	<select id="getAuditoriumSize" parameterType="map" resultType="AuditoriumSize">
		select auditorium_id, max(seat_row) as max_seat_row, max(seat_number) as max_seat_number from seat where auditorium_id=(select sc.auditorium_id
		from screening sc, movie mo
		where sc.movie_id=mo.movie_id
		and movie_title=#{movie_title}
		and screening_start = to_date(#{screening_start},'mm-dd hh24:mi'))
		group by auditorium_id
	</select>
	
	<select id="getReservedSeat" parameterType="map" resultType="Seat">
		select se.*
		from (select * from seat_reserved where screening_id=(select screening_id from screening sc, movie mo where sc.movie_id=mo.movie_id
		and mo.movie_title=#{movie_title} and sc.screening_start = to_date(#{screening_start},'mm-dd hh24:mi'))) se_r, seat se
		where se_r.seat_id=se.seat_id
	</select>
	
	<insert id="insertReservation" parameterType="map">
		insert into reservation values(reservation_seq.nextval, #{user_id}, (select screening_id from screening sc, movie mo
		where sc.movie_id=mo.movie_id
		and mo.movie_title=#{movie_title}
		and sc.screening_start = to_date(#{screening_start},'mm-dd hh24:mi')),default)
	</insert>
	
	<insert id="reserveSeat" parameterType="map">
		insert into seat_reserved values(seat_reserved_seq.nextval,
		(select seat_id
		from seat
		where seat_row=#{seat_row}
		and seat_number=#{seat_number}
		and auditorium_id=#{auditorium_id}),
		(select reservation_id from reservation where reservation_id=(select max(reservation_id) from reservation)),
		(select screening_id from reservation where reservation_id=(select max(reservation_id) from reservation)))
	</insert>
	
	<select id="currentReservation" resultType="Reservation">
		select * from reservation where reservation_id=(select max(reservation_id) from reservation)
	</select>
	
	<delete id="deleteReservation" parameterType="map">
		delete from reservation
		<where>
			<if test="refund == true">
				reservation_id=(select re.reservation_id
				from reservation re, screening sc
				where re.screening_id=sc.screening_id
				and re.reservation_id=#{reservation_id}
				and screening_start > sysdate+20/1440)
			</if>
			<if test="refund == false">
				reservation_id=#{reservation_id}
			</if>
		</where>
	</delete>
	
	<select id="getTicket" parameterType="int" resultType="Ticket">
		select mo.movie_title, mo.movie_title_en,mo.movie_rating, sc.screening_cnt, sc.screening_start, sc.screening_end, sc.auditorium_id, re.reservation_id, re.user_id, re.reservation_time, se.seat_row, se.seat_number, count(*) over(partition by re.reservation_id) as audience_cnt 
		from movie mo, screening sc, reservation re, seat_reserved se_r, seat se
		where mo.movie_id=sc.movie_id
		and sc.screening_id=re.screening_id
		and re.reservation_id=se_r.reservation_id
		and se_r.seat_id=se.seat_id
		and re.reservation_id=#{reservation_id}
	</select>
	
	<insert id="insertUser" parameterType="User">
		insert into theater_user values(user_seq.nextval, #{user_name}, #{user_password}, #{user_phone}, #{user_email}, default, default)
	</insert>
	
	<select id="searchUser" parameterType="map" resultType="User">
		select * from theater_user where user_name=#{user_name}
		<choose>
			<when test="password_in != false">
				and user_password=#{user_password} and user_activation=#{user_activation} 
			</when>
		</choose>
	</select>
	
	<update id="updateUserInfo" parameterType="User">
		update theater_user set user_password=#{user_password}, user_phone=#{user_phone}, user_email=#{user_email}, user_point=#{user_point}, user_activation=#{user_activation} where user_id=#{user_id}
	</update>
</mapper>